!function(){"use strict";angular.module("angularChemistrySite",["ngSanitize","mmAngularChemistry","ngRoute"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"components/home/home-view.html"}).when("/api",{templateUrl:"components/api/api-view.html"}).when("/api/:element",{templateUrl:"components/api/api-view.html",controller:"ApiController"}).otherwise({redirectTo:"/"})}]).run(["ChemElements",function(a){a.extended("components/elements.json")}])}(),function(){"use strict";function a(a,b){var c=this;c.navbar={directives:["chemEntity","chemScheme","pubchem"],services:["elements","utils","pubchem"],filters:["scientific"]},c.viewPort=function(){return a.matchMedia&&a.matchMedia("(min-width: 768px)").matches},c.getTemplate=function(){var a=b.path();return"/api"===a?"components/api/chementity-view.html":"components"+a+"-view.html"},c.apiLocation=function(){return!!b.path().match(/^\/api/)}}function b(a){return{transclude:!0,scope:{offsetY:"@"},template:"<div ng-transclude></div>",link:function(b,c){function d(){a.scrollY>=e&&angular.element(c).addClass("mm-following-api"),a.scrollY<e&&angular.element(c).removeClass("mm-following-api")}var e=c[0].getBoundingClientRect().top-30;angular.element(a).bind("scroll",d),b.$on("$destroy",function(){angular.element(a).off("scroll",d)})}}}angular.module("angularChemistrySite").controller("ApiController",a).directive("mmScroll",b),a.$inject=["$window","$location"],b.$inject=["$window"]}(),function(){"use strict";function a(){var a=this;a.examples={examplesGeneral:["H2SO4","Fe2(PO4)3","[Zn(NH3)4]^2+","&eta;^2-O2","&eta;^(2)-O2","NH_(4)^(+)","NH4^(+)","Al_(2)Si_(4)O_(10)(OH)_(2)","C_12H_(22)O_(12)"],examplesSub:["Fe2(PO4)3"],examplesSup:["[Zn(NH3)4]^2+"],examplesAsIs:["H2SO4"],examplesStrong:["CH3COOH","CH3CH2COOH","HOOCCH2CH2COOH"],examplesEm:["C2H5OH","HOCH2CH2OH"]}}angular.module("angularChemistrySite").controller("ChemEntityController",a)}(),function(){"use strict";function a(){var a=this,b=["rarr","larr","harr","rlarr","lrarr","lrhar","rlhar","xrarr","xlarr","xharr"];a.arrows={},angular.forEach(b,function(a){this[a]="&"+a+";"},a.arrows)}angular.module("angularChemistrySite").controller("ChemSchemeController",a)}(),function(){"use strict";function a(){var a=this;a.examples={ex1:{index:"<chem-scheme chem-subst='myCtrl.substrates1'\n	     chem-prod='myCtrl.products1'\n	     chem-arrow='rarr'>\n</chem-scheme>\n<chem-scheme chem-subst='myCtrl.substrates2'\n	     chem-prod='myCtrl.products2'\n	     chem-arrow='rlhar'>\n</chem-scheme>\n<div chem-scheme chem-subst='myCtrl.substrates3'\n	     chem-prod='myCtrl.products3'\n	     chem-arrow='rlhar'>\n</div>\n<chem-scheme chem-subst='myCtrl.substrates4'\n	     chem-prod='myCtrl.products4'\n	     chem-arrow='rlhar'>\n</chem-scheme>\n<strong chem-scheme chem-subst='myCtrl.substrates5'\n	     chem-prod='myCtrl.products5'\n	     chem-arrow='rarr'>\n</strong>",script:"angular.module('myModule', ['mmAngularChemistry'])\n  .controller('myCtrl', [function () {\n    this.substrates1 = ['H2SO4', 'NaOH'];\n    this.products1 = ['Na2SO4', 'H2O'];\n    this.substrates2 = ['HSO4^-', 'H2O'];\n    this.products2 = ['SO4^2-', 'H3O^+'];\n    this.substrates3 = ['Zn^2+', 'NH3'];\n    this.products3 = ['[Zn(NH3)4]^2+'];\n    this.substrates4 = ['2S2O3^2-', 'I2'];\n    this.products4 = ['S4O6^2-', '2I^-'];\n    this.substrates5 = ['Zn', '4HNO3_( (conc.))'];\n    this.products5 = ['Zn^2+', '2NO3^2-', '2NO2', 'H2O'];\n}]);",show:{substrates1:["H2SO4","NaOH"],products1:["Na2SO4","H2O"],substrates2:["HSO4^-","H2O"],products2:["SO4^2-","H3O^+"],substrates3:["Zn^2+","NH3"],products3:["[Zn(NH3)4]^2+"],substrates4:["2S2O3^2-","I2"],products4:["S4O6^2-","2I^-"],substrates5:["Zn","4HNO3_( (conc.))"],products5:["Zn^2+","2NO3^2-","2NO2","H2O"]},active:"result"}},a.changeTab=function(a,b){a.active=b}}angular.module("angularChemistrySite").controller("ChemSchemeExController",a)}(),function(){"use strict";function a(a){var b=this;b.examples={ex1:{index:"<div ng-controller='myCtrl as ctrl'>\n  <div ng-repeat='(formula, weight) in ctrl.weights'>\n    <chem-entity chem-formula='{{formula}}'></chem-entity>,\n    molecular weight: <span ng-bind='weight.result.toFixed(2)'></span>\n  </div>\n</div>",script:"angular.module('myModule', ['mmAngularChemistry'])\n  .controller('myCtrl', ['ChemElements', function (ChemElements) {\n    this.formulas = ['H2SO4', 'CH3COOH', 'C18H20O6PdS2', 'C31H38Cl2N2ORu'];\n    this.weights = {};\n    angular.forEach(formulas, function (formula) {\n      this[formula] = ChemElements.calcWeight(formula);\n    }, weights);\n  }]);",formulas:["H2SO4","CH3COOH","C18H20O6PdS2","C31H38Cl2N2ORu"],weights:{},active:"result"},ex2:{index:"<div ng-controller='myCtrl as ctrl'>\n  Elements with names, which start with 'L' and end with 'ium':\n  <div ng-repeat='(element, values) in ctrl.elementsWithIum'>\n    <span ng-bind='values.name'></span>, symbol: <strong ng-bind='value.symbol'></strong>\n  </div>\n  Elements with three-letterd symbols:\n  <div ng-repeat='(element, values) in ctrl.elementsWithThreeLett'>\n    <span ng-bind='values.name'></span>, symbol: <strong ng-bind='value.symbol'></strong>\n  </div>\n  Elements with molecular weight greater than 10 amu but lower than 20 amu:\n  <div ng-repeat='(element, values) in ctrl.elementsWithWeight'>\n    <span ng-bind='values.name'></span>, weight: <strong ng-bind='value.weight.toFixed(2)'></strong>\n  </div>\n</div>",script:"angular.module('myModule', ['mmAngularChemistry'])\n  .controller('myCtrl', ['ChemElements', function (ChemElements) {\n    this.elementsWithIum = ChemElements.filter('name', { match: /^L.*ium$/ });\n    this.elementsWithThreeLett = ChemElements.filter('symbol', { match: /[A-Z][a-z]{2}/ });\n    this.elementsWithWeight = ChemElements.filter('weight', { $gt: 10, $lt: 20 });\n  }]);\n",elementsWithIum:a.filter("name",{match:/^L.*ium$/}),elementsWithThreeLett:a.filter("symbol",{match:/[A-Z][a-z]{2}/}),elementsWithWeight:a.filter("weight",{$gt:10,$lt:20}),active:"result"},ex3:{index:"<div ng-controller='myCtrl as ctrl'>\n  Elements with boiling points lower than 50K:\n  <div ng-repeat='(element, values) in ctrl.elementsWithBp'>\n    <span ng-bind='values.name'></span>, symbol: <strong ng-bind='value.symbol'></strong>\n  </div>\n  Noble gases:\n  <div ng-repeat='(element, values) in ctrl.nobleGases'>\n    <span ng-bind='values.name'></span>, symbol: <strong ng-bind='value.symbol'></strong>\n  </div>\n  Polyatomic nonmetals:\n  <div ng-repeat='(element, values) in ctrl.polyatomicNonmetals'>\n    <span ng-bind='values.name'></span>, symbol: <strong ng-bind='value.symbol'></strong>\n  </div>\n",script:"angular.module('myModule', ['mmAngularChemistry'])\n  .run(['ChemElements', function ('ChemElements') {\n    ChemElements.extended('path/to/extended-elements.json');\n  }])\n  .controller('myCtrl', ['ChemElements', function (ChemElements) {\n    this.elementsWithBp = ChemElements.filter('boilingPoint', { $lt: 50 });\n    this.nobleGases = ChemElements.filter('desc', { match: /noble gas/ });\n    this.polyatomicNonmetals = ChemElements.filter('desc', { match: /polyatomic nonmetal/ });\n  }]);\n",elementsWithBp:a.filter("boilingPoint",{$lt:50}),nobleGases:a.filter("desc",{match:/noble gas/}),polyatomicNonmetals:a.filter("desc",{match:/polyatomic nonmetal/}),active:"result"}},b.changeTab=function(a,b){a.active=b},angular.forEach(b.examples.ex1.formulas,function(b){this[b]=a.calcWeight(b)},b.examples.ex1.weights)}angular.module("angularChemistrySite").controller("ElementsController",a),a.$inject=["ChemElements"]}(),function(){"use strict";function a(a){var b=this;b.numbers=[2.333,300.234,".345","302.45",9999.99,.00876],b.tryIt=-123.456,b.decimal,b.result=function(){return b.tryIt&&"number"==typeof b.decimal?a(b.tryIt,b.decimal):b.tryIt?a(b.tryIt):""}}angular.module("angularChemistrySite").controller("ScientificFilterController",a),a.$inject=["scientificFilter"]}(),function(){"use strict";function a(){var a=this;a.toolsDescription={reactionDirectives:{title:"Reaction directives",desc:"a set of directives for building chemical reactions",api:"api/reaction-directives"},elementsService:{title:"Elements service",desc:"basically, it's a Mendeleev's periodic table to be used within your code",api:"api/elements"},pubchemAccess:{title:"Pubchem access",desc:"a javascript wrapper for Pubchem API",api:"api/pubchem-access"},variousUtils:{title:"Various utils",desc:"a set of other chemistry-related tools",api:"api/various-utils"}}}angular.module("angularChemistrySite").controller("MainController",a)}();